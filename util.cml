(* =========================================================================
 * cakedep: resolve cakeml include pragmas
 *
 * Oskar Abrahamsson, 2021                                    www.cakeml.org
 * ========================================================================= *)

exception Fail string;

fun fail () = raise Fail "";

fun failwith msg = raise Fail msg;

fun str_hash str =
  let
    fun hash acc i =
      if i >= String.size str then acc else
        hash (13 * acc + Char.ord (String.sub str i)) (i + 1)
  in
    hash 0 0
  end;

structure Debug = struct
  val debug = Ref False;

  fun log_msg func msg =
    if !debug then
      TextIO.output TextIO.stdErr ("[" ^ func ^ "] " ^ msg ^ "\n")
    else ();

end (* struct *)

structure Path = struct
  (* The CakeML does not support any functions for dealing with paths and
   * directories. This code calls into code defined in basis_extra.c,
   * which in turn calls C functions getcwd(), realpath(), basename(), dirname()
   *)
  local
    (* The first 2 bytes store the length of the string, and the following
     * 16382 bytes store the actual string *)
    val buf = Word8Array.array 16384 (Word8.fromInt 0)
    val _ = #(getcwd) "" buf
    val strlen = Marshalling.w22n buf 0
    val cwd = Word8Array.substring buf 2 strlen
  in
    type path = string;
    fun getcwd () = cwd;
    fun basename path =
      let
        val buf = Word8Array.array 16384 (Word8.fromInt 0)
        val _ = #(basename) path buf
        val strlen = Marshalling.w22n buf 0
      in
        Word8Array.substring buf 2 strlen
      end;
    fun dirname path =
      let
        val buf = Word8Array.array 16384 (Word8.fromInt 0)
        val _ = #(dirname) path buf
        val strlen = Marshalling.w22n buf 0
      in
        Word8Array.substring buf 2 strlen
      end;
    fun split path =
      (dirname path, basename path);
    fun join p1 p2 = p1 ^ "/" ^ p2;
    fun absolute path =
      let
        val buf = Word8Array.array 16384 (Word8.fromInt 0)
        val _ = #(realpath) path buf
        val strlen = Marshalling.w22n buf 0
      in
        Word8Array.substring buf 2 strlen
      end
  end; (* local *)

end (* struct *)

(*
vim: ft=sml
*)
